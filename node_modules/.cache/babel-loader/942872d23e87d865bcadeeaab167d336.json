{"remainingRequest":"F:\\代码\\Vue 代码\\erabbit-client-pc-124\\node_modules\\thread-loader\\dist\\cjs.js!F:\\代码\\Vue 代码\\erabbit-client-pc-124\\node_modules\\babel-loader\\lib\\index.js!F:\\代码\\Vue 代码\\erabbit-client-pc-124\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!F:\\代码\\Vue 代码\\erabbit-client-pc-124\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\代码\\Vue 代码\\erabbit-client-pc-124\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!F:\\代码\\Vue 代码\\erabbit-client-pc-124\\src\\views\\goods\\components\\goods-sku.vue?vue&type=template&id=1bfc1ce9&scoped=true","dependencies":[{"path":"F:\\代码\\Vue 代码\\erabbit-client-pc-124\\src\\views\\goods\\components\\goods-sku.vue","mtime":1621243079000},{"path":"F:\\代码\\Vue 代码\\erabbit-client-pc-124\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1656924649801},{"path":"F:\\代码\\Vue 代码\\erabbit-client-pc-124\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1656924649783},{"path":"F:\\代码\\Vue 代码\\erabbit-client-pc-124\\node_modules\\babel-loader\\lib\\index.js","mtime":1656924651984},{"path":"F:\\代码\\Vue 代码\\erabbit-client-pc-124\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1656924654079},{"path":"F:\\代码\\Vue 代码\\erabbit-client-pc-124\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1656924649801},{"path":"F:\\代码\\Vue 代码\\erabbit-client-pc-124\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1656924653036}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIjsKaW1wb3J0IHsgcmVuZGVyTGlzdCBhcyBfcmVuZGVyTGlzdCwgRnJhZ21lbnQgYXMgX0ZyYWdtZW50LCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrLCB0b0Rpc3BsYXlTdHJpbmcgYXMgX3RvRGlzcGxheVN0cmluZywgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBjcmVhdGVDb21tZW50Vk5vZGUgYXMgX2NyZWF0ZUNvbW1lbnRWTm9kZSwgd2l0aFNjb3BlSWQgYXMgX3dpdGhTY29wZUlkLCBwdXNoU2NvcGVJZCBhcyBfcHVzaFNjb3BlSWQsIHBvcFNjb3BlSWQgYXMgX3BvcFNjb3BlSWQgfSBmcm9tICJ2dWUiOwoKdmFyIF93aXRoSWQgPSAvKiNfX1BVUkVfXyovX3dpdGhTY29wZUlkKCJkYXRhLXYtMWJmYzFjZTkiKTsKCl9wdXNoU2NvcGVJZCgiZGF0YS12LTFiZmMxY2U5Iik7Cgp2YXIgX2hvaXN0ZWRfMSA9IHsKICBjbGFzczogImdvb2RzLXNrdSIKfTsKCl9wb3BTY29wZUlkKCk7CgpleHBvcnQgdmFyIHJlbmRlciA9IC8qI19fUFVSRV9fKi9fd2l0aElkKGZ1bmN0aW9uIChfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soImRpdiIsIF9ob2lzdGVkXzEsIFsoX29wZW5CbG9jayh0cnVlKSwgX2NyZWF0ZUJsb2NrKF9GcmFnbWVudCwgbnVsbCwgX3JlbmRlckxpc3QoJHByb3BzLmdvb2RzLnNwZWNzLCBmdW5jdGlvbiAoaXRlbSkgewogICAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJkbCIsIHsKICAgICAga2V5OiBpdGVtLmlkCiAgICB9LCBbX2NyZWF0ZVZOb2RlKCJkdCIsIG51bGwsIF90b0Rpc3BsYXlTdHJpbmcoaXRlbS5uYW1lKSwgMSksIF9jcmVhdGVWTm9kZSgiZGQiLCBudWxsLCBbKF9vcGVuQmxvY2sodHJ1ZSksIF9jcmVhdGVCbG9jayhfRnJhZ21lbnQsIG51bGwsIF9yZW5kZXJMaXN0KGl0ZW0udmFsdWVzLCBmdW5jdGlvbiAodmFsKSB7CiAgICAgIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfRnJhZ21lbnQsIHsKICAgICAgICBrZXk6IHZhbC5uYW1lCiAgICAgIH0sIFt2YWwucGljdHVyZSA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygiaW1nIiwgewogICAgICAgIGtleTogMCwKICAgICAgICBjbGFzczogewogICAgICAgICAgc2VsZWN0ZWQ6IHZhbC5zZWxlY3RlZCwKICAgICAgICAgIGRpc2FibGVkOiB2YWwuZGlzYWJsZWQKICAgICAgICB9LAogICAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soJGV2ZW50KSB7CiAgICAgICAgICByZXR1cm4gJHNldHVwLmNoYW5nZVNrdShpdGVtLCB2YWwpOwogICAgICAgIH0sCiAgICAgICAgc3JjOiB2YWwucGljdHVyZSwKICAgICAgICB0aXRsZTogdmFsLm5hbWUKICAgICAgfSwgbnVsbCwgMTAsIFsib25DbGljayIsICJzcmMiLCAidGl0bGUiXSkpIDogKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJzcGFuIiwgewogICAgICAgIGtleTogMSwKICAgICAgICBjbGFzczogewogICAgICAgICAgc2VsZWN0ZWQ6IHZhbC5zZWxlY3RlZCwKICAgICAgICAgIGRpc2FibGVkOiB2YWwuZGlzYWJsZWQKICAgICAgICB9LAogICAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soJGV2ZW50KSB7CiAgICAgICAgICByZXR1cm4gJHNldHVwLmNoYW5nZVNrdShpdGVtLCB2YWwpOwogICAgICAgIH0KICAgICAgfSwgX3RvRGlzcGxheVN0cmluZyh2YWwubmFtZSksIDExLCBbIm9uQ2xpY2siXSkpXSwgNjQpOwogICAgfSksIDEyOCkpXSldKTsKICB9KSwgMTI4KSldKTsKfSk7"},{"version":3,"sources":["F:\\代码\\Vue 代码\\erabbit-client-pc-124\\src\\views\\goods\\components\\goods-sku.vue"],"names":[],"mappings":";;;;;;;;;;AACO,EAAA,KAAK,EAAC;;;;;;uBAAX,YAAA,CAUM,KAVN,EAAA,UAAA,EAUM,E,kBATJ,YAAA,CAQK,SARL,EAQK,IARL,EAQK,WAAA,CARc,MAAA,CAAA,KAAA,CAAM,KAQpB,EARyB,UAAnB,IAAmB,EAAf;yBAAf,YAAA,CAQK,IARL,EAQK;AAR4B,MAAA,GAAG,EAAE,IAAI,CAAC;AAQtC,KARL,E,CACE,YAAA,CAAsB,IAAtB,EAAsB,IAAtB,EAAsB,gBAAA,CAAhB,IAAI,CAAC,IAAW,CAAtB,EAAe,CAAf,C,EACA,YAAA,CAKK,IALL,EAKK,IALL,EAKK,E,kBAJH,YAAA,CAGW,SAHX,EAGW,IAHX,EAGW,WAAA,CAHa,IAAI,CAAC,MAGlB,EAHwB,UAAlB,GAAkB,EAAf;;aAAuB,GAAG,CAAC;UACkD,GAAG,CAAC,O,kBAAnG,YAAA,CAAkJ,KAAlJ,EAAkJ;cAAA;AAA5I,QAAA,KAAK,EAAA;AAAA,UAAA,QAAA,EAAY,GAAG,CAAC,QAAhB;AAAwB,UAAA,QAAA,EAAU,GAAG,CAAC;AAAtC,SAAuI;AAArF,QAAA,OAAK,EAAA,iBAAA,MAAA;AAAA,iBAAE,MAAA,CAAA,SAAA,CAAU,IAAV,EAAe,GAAf,CAAF;AAAA,SAAgF;AAArC,QAAA,GAAG,EAAE,GAAG,CAAC,OAA4B;AAAlB,QAAA,KAAK,EAAE,GAAG,CAAC;AAAO,OAAlJ,E,IAAA,E,EAAA,E,2BAAA,C,mBACA,YAAA,CAAoH,MAApH,EAAoH;cAAA;AAA7G,QAAA,KAAK,EAAA;AAAA,UAAA,QAAA,EAAY,GAAG,CAAC,QAAhB;AAAwB,UAAA,QAAA,EAAU,GAAG,CAAC;AAAtC,SAAwG;AAAtD,QAAA,OAAK,EAAA,iBAAA,MAAA;AAAA,iBAAE,MAAA,CAAA,SAAA,CAAU,IAAV,EAAe,GAAf,CAAF;AAAA;AAAiD,OAApH,E,iBAAmG,GAAG,CAAC,I,CAAvG,EAA2G,EAA3G,EAA2G,CAAA,SAAA,CAA3G,C;KACS,CAHX,E,GAAA,CAIG,EALL,C,CAFF,C;GAQK,CARL,E,GAAA,CASI,EAVN,C","sourcesContent":["<template>\n  <div class=\"goods-sku\">\n    <dl v-for=\"item in goods.specs\" :key=\"item.id\">\n      <dt>{{item.name}}</dt>\n      <dd>\n        <template v-for=\"val in item.values\" :key=\"val.name\">\n          <img :class=\"{selected:val.selected,disabled:val.disabled}\" @click=\"changeSku(item,val)\" v-if=\"val.picture\" :src=\"val.picture\" :title=\"val.name\" >\n          <span :class=\"{selected:val.selected,disabled:val.disabled}\" @click=\"changeSku(item,val)\" v-else>{{val.name}}</span>\n        </template>\n      </dd>\n    </dl>\n  </div>\n</template>\n<script>\nimport powerSet from '@/vender/power-set'\nconst spliter = '★'\n// 得到一个路径字典对象\nconst getPathMap = (skus) => {\n  // 1. 得到所有的sku集合  props.goods.skus\n  // 2. 从所有的sku中筛选出有效的sku\n  // 3. 根据有效的sku使用power-set算法得到子集\n  // 4. 根据子集往路径字典对象中存储 key-value\n  const pathMap = {}\n  skus.forEach(sku => {\n    if (sku.inventory > 0) {\n      // 计算当前有库存的sku的子集\n      // 例如：[1,2,3] ==> [[1],[2],[3],[1,2],[1,3],[2,3],[1,2,3]]\n      // 可选值数组\n      const valueArr = sku.specs.map(val => val.valueName)\n      // 可选值数组 子集\n      const valueArrPowerSet = powerSet(valueArr)\n      // 遍历子集，往pathMap插入数据\n      valueArrPowerSet.forEach(arr => {\n        // 根据arr得到字符串的key，约定key是：['蓝色','美国'] ===> '蓝色★美国'\n        const key = arr.join(spliter)\n        // 给pathMap设置数据\n        if (pathMap[key]) {\n          pathMap[key].push(sku.id)\n        } else {\n          pathMap[key] = [sku.id]\n        }\n      })\n    }\n  })\n  return pathMap\n}\n// 获取已选中的值数组\nconst getSelectedValues = (specs) => {\n  const arr = []\n  specs.forEach(item => {\n    // 选中的按钮对象\n    const seletedVal = item.values.find(val => val.selected)\n    arr.push(seletedVal ? seletedVal.name : undefined)\n  })\n  return arr\n}\n// 更新按钮禁用状态\nconst updateDisabledStatus = (specs, pathMap) => {\n  // 1. 约定每一个按钮的状态由本身的disabled数据来控制\n  specs.forEach((item, i) => {\n    const selectedValues = getSelectedValues(specs)\n    item.values.forEach(val => {\n      // 2. 判断当前是否选中，是选中不用判断\n      if (val.selected) return\n      // 3. 拿当前的值按照顺序套入选中的值数组\n      selectedValues[i] = val.name\n      // 4. 剔除undefined数据，按照分隔符拼接key\n      const key = selectedValues.filter(value => value).join(spliter)\n      // 5. 拿着key去路径字典中查找是否有数据，有可以点击，没有就禁用（true）\n      val.disabled = !pathMap[key]\n    })\n  })\n}\n// 默认选中\nconst initDefaultSelected = (goods, skuId) => {\n  // 1. 找出sku的信息\n  // 2. 遍历每一个按钮，按钮的值和sku记录的值相同，就选中。\n  const sku = goods.skus.find(sku => sku.id === skuId)\n  goods.specs.forEach((item, i) => {\n    const val = item.values.find(val => val.name === sku.specs[i].valueName)\n    val.selected = true\n  })\n}\n\nexport default {\n  name: 'GoodsSku',\n  props: {\n    goods: {\n      type: Object,\n      default: () => ({})\n    },\n    skuId: {\n      type: String,\n      default: ''\n    }\n  },\n  setup (props, { emit }) {\n    const pathMap = getPathMap(props.goods.skus)\n    // 根据skuId初始化选中\n    if (props.skuId) {\n      initDefaultSelected(props.goods, props.skuId)\n    }\n    // ☆组件初始化：更新按钮禁用状态\n    updateDisabledStatus(props.goods.specs, pathMap)\n    // 1. 选中与取消选中，约定在每一个按钮都拥有自己的选中状态数据：selected\n    // 1.1 点击的是已选中，只需要取消当前的选中\n    // 1.2 点击的是未选中，把同一个规格的按钮改成未选中，当前点击的改成选中\n    const changeSku = (item, val) => {\n      // 当按钮是禁用的阻止程序运行\n      if (val.disabled) return\n      // 如果不是禁用正常运行\n      if (val.selected) {\n        val.selected = false\n      } else {\n        item.values.forEach(valItem => {\n          valItem.selected = false\n        })\n        val.selected = true\n      }\n      // ☆点击按钮时：更新按钮禁用状态\n      updateDisabledStatus(props.goods.specs, pathMap)\n      // 将你选择的sku信息通知父组件{skuId,price,oldPrice,inventory,specsText}\n      // 1. 选择完整的sku组合按钮，才可以拿到这些信息，提交父组件\n      // 2. 不是完整的sku组合按钮，提交空对象父组件\n      const validSelectedValues = getSelectedValues(props.goods.specs).filter(v => v)\n      if (validSelectedValues.length === props.goods.specs.length) {\n        // 完整\n        const skuIds = pathMap[validSelectedValues.join(spliter)]\n        const sku = props.goods.skus.find(sku => sku.id === skuIds[0])\n        emit('change', {\n          skuId: sku.id,\n          price: sku.price,\n          oldPrice: sku.oldPrice,\n          inventory: sku.inventory,\n          // 属性名：属性值 属性名1：属性值1 ... 这样的字符串\n          specsText: sku.specs.reduce((p, c) => `${p} ${c.name}：${c.valueName}`, '').trim()\n        })\n      } else {\n        // 不完整\n        // 父组件需要判断是否规格选择完整，不完整不能加购物车。\n        emit('change', {})\n      }\n    }\n    return { changeSku }\n  }\n}\n</script>\n<style scoped lang=\"less\">\n.sku-state-mixin () {\n  border: 1px solid #e4e4e4;\n  margin-right: 10px;\n  cursor: pointer;\n  &.selected {\n    border-color: @xtxColor;\n  }\n  &.disabled {\n    opacity: 0.6;\n    border-style: dashed;\n    cursor: not-allowed;\n  }\n}\n.goods-sku {\n  padding-left: 10px;\n  padding-top: 20px;\n  dl {\n    display: flex;\n    padding-bottom: 10px;\n    align-items: center;\n    dt {\n      width: 50px;\n      color: #999;\n    }\n    dd {\n      flex: 1;\n      color: #666;\n      line-height: 40px;\n      > img {\n        width: 50px;\n        height: 50px;\n        .sku-state-mixin ();\n      }\n      > span {\n        display: inline-block;\n        height: 30px;\n        line-height: 28px;\n        padding: 0 20px;\n        .sku-state-mixin ();\n      }\n    }\n  }\n}\n</style>\n"],"sourceRoot":""}]}