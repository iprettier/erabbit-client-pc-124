{"remainingRequest":"F:\\代码\\Vue 代码\\erabbit-client-pc-124\\node_modules\\thread-loader\\dist\\cjs.js!F:\\代码\\Vue 代码\\erabbit-client-pc-124\\node_modules\\babel-loader\\lib\\index.js!F:\\代码\\Vue 代码\\erabbit-client-pc-124\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\代码\\Vue 代码\\erabbit-client-pc-124\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!F:\\代码\\Vue 代码\\erabbit-client-pc-124\\src\\components\\library\\xtx-pagination.vue?vue&type=script&lang=js","dependencies":[{"path":"F:\\代码\\Vue 代码\\erabbit-client-pc-124\\src\\components\\library\\xtx-pagination.vue","mtime":1621243079000},{"path":"F:\\代码\\Vue 代码\\erabbit-client-pc-124\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1656924649801},{"path":"F:\\代码\\Vue 代码\\erabbit-client-pc-124\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1656924649783},{"path":"F:\\代码\\Vue 代码\\erabbit-client-pc-124\\node_modules\\babel-loader\\lib\\index.js","mtime":1656924651984},{"path":"F:\\代码\\Vue 代码\\erabbit-client-pc-124\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1656924649801},{"path":"F:\\代码\\Vue 代码\\erabbit-client-pc-124\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1656924653036}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0IHsgY29tcHV0ZWQsIHJlZiwgd2F0Y2ggfSBmcm9tICd2dWUnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1h0eFBhZ2luYXRpb24nLAogIHByb3BzOiB7CiAgICB0b3RhbDogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDEwMAogICAgfSwKICAgIHBhZ2VTaXplOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogMTAKICAgIH0sCiAgICBjdXJyZW50UGFnZTogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDEKICAgIH0KICB9LAogIHNldHVwOiBmdW5jdGlvbiBzZXR1cChwcm9wcywgX3JlZikgewogICAgdmFyIGVtaXQgPSBfcmVmLmVtaXQ7CiAgICAvLyDpnIDopoHmlbDmja7vvJoKICAgIC8vIDEuIOe6puWumuaMiemSrueahOS4quaVsCA1IOS4qu+8jOWmguaenOaIkOS4uuWKqOaAgeeahOmcgOimgeiuvue9ruWTjeW6lOW8j+aVsOaNrgogICAgdmFyIGNvdW50ID0gNTsgLy8gMi4g5b2T5YmN5pi+56S655qE6aG156CBCgogICAgdmFyIG15Q3VycmVudFBhZ2UgPSByZWYoMSk7IC8vIDMuIOaAu+mhteaVsCA9IOaAu+adoeaVsCAvIOavj+S4gOmhteadoeaVsCAg5ZCR5LiK5Y+W5pW0CgogICAgdmFyIG15VG90YWwgPSByZWYoMTAwKTsKICAgIHZhciBteVBhZ2VTaXplID0gcmVmKDEwKTsgLy8g5YW25LuW5pWw5o2u77yI5oC76aG15pWw77yM6LW35aeL5oyJ6ZKu77yM57uT5p2f5oyJ6ZKu77yM5oyJ6ZKu5pWw57uE77yJ5L6d6LWW5LiK6Z2i5pWw5o2u5b6X5YiwCgogICAgdmFyIHBhZ2VyID0gY29tcHV0ZWQoZnVuY3Rpb24gKCkgewogICAgICAvLyDmgLvpobXmlbAKICAgICAgdmFyIHBhZ2VDb3VudCA9IE1hdGguY2VpbChteVRvdGFsLnZhbHVlIC8gbXlQYWdlU2l6ZS52YWx1ZSk7IC8vIOaMiemSruS4quWSjOW9k+WJjemhteeggSA9PT09PiDotbflp4vmjInpkq7vvIznu5PmnZ/mjInpkq7vvIzmjInpkq7mlbDnu4QKICAgICAgLy8gMS4g55CG5oOz5oOF5Ya15LiL77yaCgogICAgICB2YXIgb2Zmc2V0ID0gTWF0aC5mbG9vcihjb3VudCAvIDIpOwogICAgICB2YXIgc3RhcnQgPSBteUN1cnJlbnRQYWdlLnZhbHVlIC0gb2Zmc2V0OwogICAgICB2YXIgZW5kID0gc3RhcnQgKyBjb3VudCAtIDE7IC8vIDIuIOWmguaenOi1t+Wni+mhteeggeWwj+S6jjHpnIDopoHlpITnkIYKCiAgICAgIGlmIChzdGFydCA8IDEpIHsKICAgICAgICBzdGFydCA9IDE7CiAgICAgICAgZW5kID0gc3RhcnQgKyBjb3VudCAtIDEgPiBwYWdlQ291bnQgPyBwYWdlQ291bnQgOiBzdGFydCArIGNvdW50IC0gMTsKICAgICAgfSAvLyAzLiDlpoLmnpznu5PmnZ/pobXnoIHlpKfkuo7mgLvpobXmlbDpnIDopoHlpITnkIYKCgogICAgICBpZiAoZW5kID4gcGFnZUNvdW50KSB7CiAgICAgICAgZW5kID0gcGFnZUNvdW50OwogICAgICAgIHN0YXJ0ID0gZW5kIC0gY291bnQgKyAxIDwgMSA/IDEgOiBlbmQgLSBjb3VudCArIDE7CiAgICAgIH0KCiAgICAgIHZhciBidG5BcnIgPSBbXTsKCiAgICAgIGZvciAodmFyIGkgPSBzdGFydDsgaSA8PSBlbmQ7IGkrKykgewogICAgICAgIGJ0bkFyci5wdXNoKGkpOwogICAgICB9IC8vIOaPkOS+m+iuoeeul+WxnuaAp+aVsOaNrgoKCiAgICAgIHJldHVybiB7CiAgICAgICAgcGFnZUNvdW50OiBwYWdlQ291bnQsCiAgICAgICAgYnRuQXJyOiBidG5BcnIsCiAgICAgICAgc3RhcnQ6IHN0YXJ0LAogICAgICAgIGVuZDogZW5kCiAgICAgIH07CiAgICB9KTsgLy8g55uR5ZCscHJvcHPnmoTlj5jljJbvvIzmm7TmlrDnu4Tku7blhoXpg6jmlbDmja4KCiAgICB3YXRjaChwcm9wcywgZnVuY3Rpb24gKCkgewogICAgICBteVRvdGFsLnZhbHVlID0gcHJvcHMudG90YWw7CiAgICAgIG15UGFnZVNpemUudmFsdWUgPSBwcm9wcy5wYWdlU2l6ZTsKICAgICAgbXlDdXJyZW50UGFnZS52YWx1ZSA9IHByb3BzLmN1cnJlbnRQYWdlOwogICAgfSwgewogICAgICBpbW1lZGlhdGU6IHRydWUKICAgIH0pOyAvLyDliIfmjaLliIbpobXlh73mlbAKCiAgICB2YXIgY2hhbmdlUGFnZXIgPSBmdW5jdGlvbiBjaGFuZ2VQYWdlcihwYWdlKSB7CiAgICAgIC8vIOmhteeggeebuOWQjOS4jeS9nOS4ugogICAgICBpZiAobXlDdXJyZW50UGFnZS52YWx1ZSAhPT0gcGFnZSkgewogICAgICAgIG15Q3VycmVudFBhZ2UudmFsdWUgPSBwYWdlOyAvLyDpgJrnn6XniLbnu4Tku7YKCiAgICAgICAgZW1pdCgnY3VycmVudC1jaGFuZ2UnLCBwYWdlKTsKICAgICAgfQogICAgfTsKCiAgICByZXR1cm4gewogICAgICBteUN1cnJlbnRQYWdlOiBteUN1cnJlbnRQYWdlLAogICAgICBwYWdlcjogcGFnZXIsCiAgICAgIGNoYW5nZVBhZ2VyOiBjaGFuZ2VQYWdlcgogICAgfTsKICB9Cn07"},{"version":3,"sources":["F:\\代码\\Vue 代码\\erabbit-client-pc-124\\src\\components\\library\\xtx-pagination.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"xtx-pagination\">\n    <a @click=\"changePager(myCurrentPage-1)\" v-if=\"myCurrentPage>1\" href=\"javascript:;\">上一页</a>\n    <a v-else href=\"javascript:;\" class=\"disabled\">上一页</a>\n    <span v-if=\"pager.start>1\">...</span>\n    <a @click=\"changePager(i)\" href=\"javascript:;\" v-for=\"i in pager.btnArr\" :key=\"i\" :class=\"{active:i===myCurrentPage}\">{{i}}</a>\n    <span v-if=\"pager.end<pager.pageCount\">...</span>\n    <a @click=\"changePager(myCurrentPage+1)\" v-if=\"myCurrentPage<pager.pageCount\" href=\"javascript:;\">下一页</a>\n    <a v-else href=\"javascript:;\" class=\"disabled\">下一页</a>\n  </div>\n</template>\n<script>\nimport { computed, ref, watch } from 'vue'\nexport default {\n  name: 'XtxPagination',\n  props: {\n    total: {\n      type: Number,\n      default: 100\n    },\n    pageSize: {\n      type: Number,\n      default: 10\n    },\n    currentPage: {\n      type: Number,\n      default: 1\n    }\n  },\n  setup (props, { emit }) {\n    // 需要数据：\n    // 1. 约定按钮的个数 5 个，如果成为动态的需要设置响应式数据\n    const count = 5\n    // 2. 当前显示的页码\n    const myCurrentPage = ref(1)\n    // 3. 总页数 = 总条数 / 每一页条数  向上取整\n    const myTotal = ref(100)\n    const myPageSize = ref(10)\n    // 其他数据（总页数，起始按钮，结束按钮，按钮数组）依赖上面数据得到\n    const pager = computed(() => {\n      // 总页数\n      const pageCount = Math.ceil(myTotal.value / myPageSize.value)\n      // 按钮个和当前页码 ====> 起始按钮，结束按钮，按钮数组\n      // 1. 理想情况下：\n      const offset = Math.floor(count / 2)\n      let start = myCurrentPage.value - offset\n      let end = start + count - 1\n      // 2. 如果起始页码小于1需要处理\n      if (start < 1) {\n        start = 1\n        end = (start + count - 1) > pageCount ? pageCount : (start + count - 1)\n      }\n      // 3. 如果结束页码大于总页数需要处理\n      if (end > pageCount) {\n        end = pageCount\n        start = (end - count + 1) < 1 ? 1 : (end - count + 1)\n      }\n      const btnArr = []\n      for (let i = start; i <= end; i++) {\n        btnArr.push(i)\n      }\n      // 提供计算属性数据\n      return {\n        pageCount,\n        btnArr,\n        start,\n        end\n      }\n    })\n\n    // 监听props的变化，更新组件内部数据\n    watch(props, () => {\n      myTotal.value = props.total\n      myPageSize.value = props.pageSize\n      myCurrentPage.value = props.currentPage\n    }, { immediate: true })\n\n    // 切换分页函数\n    const changePager = (page) => {\n      // 页码相同不作为\n      if (myCurrentPage.value !== page) {\n        myCurrentPage.value = page\n        // 通知父组件\n        emit('current-change', page)\n      }\n    }\n\n    return { myCurrentPage, pager, changePager }\n  }\n}\n</script>\n<style scoped lang=\"less\">\n.xtx-pagination {\n  display: flex;\n  justify-content: center;\n  padding: 30px;\n  > a {\n    display: inline-block;\n    padding: 5px 10px;\n    border: 1px solid #e4e4e4;\n    border-radius: 4px;\n    margin-right: 10px;\n    &:hover {\n      color: @xtxColor;\n    }\n    &.active {\n      background: @xtxColor;\n      color: #fff;\n      border-color: @xtxColor;\n    }\n    &.disabled {\n      cursor: not-allowed;\n      opacity: 0.4;\n      &:hover {\n        color: #333\n      }\n    }\n  }\n  > span {\n    margin-right: 10px;\n  }\n}\n</style>\n"],"sourceRoot":""}]}