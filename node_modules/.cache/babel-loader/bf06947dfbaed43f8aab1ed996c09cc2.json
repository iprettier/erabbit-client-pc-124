{"remainingRequest":"F:\\代码\\Vue 代码\\erabbit-client-pc-124\\node_modules\\thread-loader\\dist\\cjs.js!F:\\代码\\Vue 代码\\erabbit-client-pc-124\\node_modules\\babel-loader\\lib\\index.js!F:\\代码\\Vue 代码\\erabbit-client-pc-124\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\代码\\Vue 代码\\erabbit-client-pc-124\\src\\store\\modules\\cart.js","dependencies":[{"path":"F:\\代码\\Vue 代码\\erabbit-client-pc-124\\src\\store\\modules\\cart.js","mtime":1621243079000},{"path":"F:\\代码\\Vue 代码\\erabbit-client-pc-124\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1656924649801},{"path":"F:\\代码\\Vue 代码\\erabbit-client-pc-124\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1656924649783},{"path":"F:\\代码\\Vue 代码\\erabbit-client-pc-124\\node_modules\\babel-loader\\lib\\index.js","mtime":1656924651984},{"path":"F:\\代码\\Vue 代码\\erabbit-client-pc-124\\node_modules\\eslint-loader\\index.js","mtime":1656924650183}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["F:/代码/Vue 代码/erabbit-client-pc-124/src/store/modules/cart.js"],"names":["checkAllCart","deleteCart","findCart","getNewCartGoods","insertCart","mergeCart","updateCart","namespaced","state","list","getters","validList","filter","goods","stock","isEffective","validTotal","reduce","p","c","count","validAmount","Math","round","nowPrice","invalidList","selectedList","item","selected","selectedTotal","selectedAmount","isCheckAll","length","mutations","payload","sameIndex","findIndex","skuId","splice","unshift","updateGoods","find","key","undefined","index","setCart","actions","ctx","cartList","map","commit","updateCartSku","oldSkuId","newSku","Promise","resolve","reject","rootState","user","profile","token","oldGoods","then","data","result","price","attrsText","specsText","inventory","newGoods","batchDeleteCart","isClear","ids","forEach","promiseArr","all","dataList","i"],"mappings":"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","sourcesContent":["import { checkAllCart, deleteCart, findCart, getNewCartGoods, insertCart, mergeCart, updateCart } from '@/api/cart'\n\n// 购物车模块\nexport default {\n  namespaced: true,\n  state () {\n    return {\n      // 购物车商品列表\n      list: []\n    }\n  },\n  getters: {\n    // 有效商品列表\n    validList (state) {\n      // 有效商品：库存大于0  stock  商品有效标识为  true  isEffective\n      return state.list.filter(goods => goods.stock > 0 && goods.isEffective)\n    },\n    // 有效商品总件数\n    validTotal (state, getters) {\n      return getters.validList.reduce((p, c) => p + c.count, 0)\n    },\n    // 有效商品总金额\n    validAmount (state, getters) {\n      // return (getters.validList.reduce((p, c) => p + c.nowPrice * 100 * c.count, 0) / 100).toFixed(2)\n      return getters.validList.reduce((p, c) => p + Math.round(c.nowPrice * 100) * c.count, 0) / 100\n    },\n    // 无效商品列表\n    invalidList (state) {\n      return state.list.filter(goods => goods.stock <= 0 || !goods.isEffective)\n    },\n    // 已选商品列表\n    selectedList (state, getters) {\n      return getters.validList.filter(item => item.selected)\n    },\n    // 已选商品总件数\n    selectedTotal (state, getters) {\n      return getters.selectedList.reduce((p, c) => p + c.count, 0)\n    },\n    // 已选商品总金额\n    selectedAmount (state, getters) {\n      return getters.selectedList.reduce((p, c) => p + Math.round(c.nowPrice * 100) * c.count, 0) / 100\n    },\n    // 是否全选\n    isCheckAll (state, getters) {\n      return getters.validList.length !== 0 && getters.selectedList.length === getters.validList.length\n    }\n  },\n  mutations: {\n    // 加入购物车\n    insertCart (state, payload) {\n      // 约定加入购物车字段必须和后端保持一致 payload对象 的字段\n      // 它们是：id skuId name attrsText picture price nowPrice selected stock count isEffective\n      // 插入数据规则：\n      // 1. 先找下是否有相同商品\n      // 2. 如果有相同的商品，查询它的数量，累加到payload上，再保存最新位置，原来商品需要删除\n      // 3. 如果没有相同商品，保存在最新位置即可\n      const sameIndex = state.list.findIndex(goods => goods.skuId === payload.skuId)\n      if (sameIndex > -1) {\n        const count = state.list[sameIndex].count\n        payload.count += count\n        // 删除原来\n        state.list.splice(sameIndex, 1)\n      }\n      // 追加新的\n      state.list.unshift(payload)\n    },\n    // 修改购物车商品\n    updateCart (state, goods) {\n      // goods 商品信息：nowPrice stock isEffective\n      // goods 商品对象的字段不固定，对象中有哪些字段就改哪些字段，字段的值合理才改\n      // goods 商品对象 必需有SKUID\n      const updateGoods = state.list.find(item => item.skuId === goods.skuId)\n      for (const key in goods) {\n        if (goods[key] !== undefined && goods[key] !== null && goods[key] !== '') {\n          updateGoods[key] = goods[key]\n        }\n      }\n    },\n    // 删除购物车商品\n    deleteCart (state, skuId) {\n      const index = state.list.findIndex(item => item.skuId === skuId)\n      state.list.splice(index, 1)\n    },\n    // 设置购物车\n    setCart (state, payload) {\n      // payload 为空数组，清空。为又值数组，设置。\n      state.list = payload\n    }\n  },\n  actions: {\n    // 合并购物车\n    async mergeCart (ctx) {\n      // 准备合并的参数\n      const cartList = ctx.state.list.map(goods => {\n        return {\n          skuId: goods.skuId,\n          selected: goods.selected,\n          count: goods.count\n        }\n      })\n      await mergeCart(cartList)\n      // 合并成功，清空本地购物车\n      ctx.commit('setCart', [])\n    },\n    // 修改规格\n    updateCartSku (ctx, { oldSkuId, newSku }) {\n      return new Promise((resolve, reject) => {\n        if (ctx.rootState.user.profile.token) {\n          // 已登录\n          // 1. 找出旧的商品信息\n          // 2. 删除旧商品数据\n          // 3. 原先商品的数量+新skuId\n          // 4. 添加新的商品\n          const oldGoods = ctx.state.list.find(item => item.skuId === oldSkuId)\n          deleteCart([oldGoods.skuId]).then(() => {\n            return insertCart({ skuId: newSku.skuId, count: oldGoods.count })\n          }).then(() => {\n            return findCart()\n          }).then(data => {\n            ctx.commit('setCart', data.result)\n            resolve()\n          })\n        } else {\n          // 未登录\n          // 1. 找出旧的商品信息\n          // 2. 删除旧商品数据\n          // 3. 根据新的sku信息和旧的商品信息，合并成一条新的购物车商品数据\n          // 4. 添加新的商品\n          const oldGoods = ctx.state.list.find(item => item.skuId === oldSkuId)\n          ctx.commit('deleteCart', oldSkuId)\n          const { skuId, price: nowPrice, specsText: attrsText, inventory: stock } = newSku\n          const newGoods = { ...oldGoods, skuId, nowPrice, attrsText, stock }\n          ctx.commit('insertCart', newGoods)\n          resolve()\n        }\n      })\n    },\n    // 批量删除\n    batchDeleteCart (ctx, isClear) {\n      return new Promise((resolve, reject) => {\n        if (ctx.rootState.user.profile.token) {\n          // 已登录\n          const ids = ctx.getters[isClear ? 'invalidList' : 'selectedList'].map(item => item.skuId)\n          deleteCart(ids).then(() => {\n            return findCart()\n          }).then(data => {\n            ctx.commit('setCart', data.result)\n            resolve()\n          })\n        } else {\n          // 未登录\n          // 找出选中的商品列表，遍历调用删除的mutations\n          // isClear 未 true  删除失效商品列表，否则事选中的商品列表\n          ctx.getters[isClear ? 'invalidList' : 'selectedList'].forEach(item => {\n            ctx.commit('deleteCart', item.skuId)\n          })\n          resolve()\n        }\n      })\n    },\n    // 全选与取消全选\n    checkAllCart (ctx, selected) {\n      return new Promise((resolve, reject) => {\n        if (ctx.rootState.user.profile.token) {\n          // 已登录\n          const ids = ctx.getters.validList.map(item => item.skuId)\n          checkAllCart({ selected, ids }).then(() => {\n            return findCart()\n          }).then(data => {\n            ctx.commit('setCart', data.result)\n            resolve()\n          })\n        } else {\n          // 未登录\n          ctx.getters.validList.forEach(goods => {\n            ctx.commit('updateCart', { skuId: goods.skuId, selected })\n          })\n          resolve()\n        }\n      })\n    },\n    // 修改购物车（选中状态，数量）\n    updateCart (ctx, payload) {\n      // payload 需要：必需有skuId  可能：selected  count\n      return new Promise((resolve, reject) => {\n        if (ctx.rootState.user.profile.token) {\n          // 已登录\n          updateCart(payload).then(() => {\n            return findCart()\n          }).then(data => {\n            ctx.commit('setCart', data.result)\n            resolve()\n          })\n        } else {\n          // 未登录\n          ctx.commit('updateCart', payload)\n          resolve()\n        }\n      })\n    },\n    // 删除购物车\n    deleteCart (ctx, payload) {\n      return new Promise((resolve, reject) => {\n        if (ctx.rootState.user.profile.token) {\n          // 已登录\n          deleteCart([payload]).then(() => {\n            return findCart()\n          }).then(data => {\n            ctx.commit('setCart', data.result)\n            resolve()\n          })\n        } else {\n          // 未登录\n          // 单条删除 payload 现在  就是skuId\n          ctx.commit('deleteCart', payload)\n          resolve()\n        }\n      })\n    },\n    // 加入购物车\n    insertCart (ctx, payload) {\n      return new Promise((resolve, reject) => {\n        if (ctx.rootState.user.profile.token) {\n          // 已登录\n          insertCart({ skuId: payload.skuId, count: payload.count }).then(() => {\n            return findCart()\n          }).then(data => {\n            ctx.commit('setCart', data.result)\n            resolve()\n          })\n        } else {\n          // 未登录\n          ctx.commit('insertCart', payload)\n          resolve()\n        }\n      })\n    },\n    // 获取商品列表\n    findCart (ctx) {\n      return new Promise((resolve, reject) => {\n        if (ctx.rootState.user.profile.token) {\n          // 已登录\n          findCart().then(data => {\n            ctx.commit('setCart', data.result)\n            resolve()\n          })\n        } else {\n          // 未登录\n          // 同时发送请求（有几个商品发几个请求）等所有请求成功，一并去修改本地数据。\n          // Promise.all(promise数组).then((dataList)=>{})  同时发请求，所有请求成功，得到所有成功结果\n          // Promise.resolve() Promise.reject() new Promise()\n          // Promise.race(promise数组).then((data)=>{}) 同时发请求，最快的请求成功，得到成功结果\n          const promiseArr = ctx.state.list.map(goods => {\n            return getNewCartGoods(goods.skuId)\n          })\n          // dataList成功结果的集合，数据顺序和promiseArr顺序一致，它又是根据state.list而来\n          Promise.all(promiseArr).then(dataList => {\n            // 更新本地购物车\n            dataList.forEach((data, i) => {\n              ctx.commit('updateCart', { skuId: ctx.state.list[i].skuId, ...data.result })\n            })\n            // 调用resolve代表操作成功\n            resolve()\n          })\n        }\n      })\n    }\n  }\n}\n"]}]}