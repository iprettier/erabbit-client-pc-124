{"remainingRequest":"F:\\代码\\Vue 代码\\erabbit-client-pc-124\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!F:\\代码\\Vue 代码\\erabbit-client-pc-124\\src\\views\\login\\components\\callback-bind.vue?vue&type=style&index=0&id=9847a1b6&scoped=true&lang=less","dependencies":[{"path":"F:\\代码\\Vue 代码\\erabbit-client-pc-124\\src\\views\\login\\components\\callback-bind.vue","mtime":1621243079000},{"path":"F:\\代码\\Vue 代码\\erabbit-client-pc-124\\node_modules\\css-loader\\dist\\cjs.js","mtime":1656924650500},{"path":"F:\\代码\\Vue 代码\\erabbit-client-pc-124\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1656924654019},{"path":"F:\\代码\\Vue 代码\\erabbit-client-pc-124\\node_modules\\postcss-loader\\src\\index.js","mtime":1656924651883},{"path":"F:\\代码\\Vue 代码\\erabbit-client-pc-124\\node_modules\\less-loader\\dist\\cjs.js","mtime":1656924651368},{"path":"F:\\代码\\Vue 代码\\erabbit-client-pc-124\\node_modules\\style-resources-loader\\lib\\index.js","mtime":1656924651644},{"path":"F:\\代码\\Vue 代码\\erabbit-client-pc-124\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1656924649801},{"path":"F:\\代码\\Vue 代码\\erabbit-client-pc-124\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1656924653036}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci51c2VyLWluZm8gewogICAgd2lkdGg6IDMyMHB4OwogICAgaGVpZ2h0OiA3MHB4OwogICAgbWFyZ2luOiAwIGF1dG87CiAgICBkaXNwbGF5OiBmbGV4OwogICAgYmFja2dyb3VuZDogI2YyZjJmMjsKICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICBwYWRkaW5nOiAwIDEwcHg7CiAgICBtYXJnaW4tYm90dG9tOiAyNXB4OwogICAgaW1nIHsKICAgICAgYmFja2dyb3VuZDogI2YyZjJmMjsKICAgICAgd2lkdGg6IDUwcHg7CiAgICAgIGhlaWdodDogNTBweDsKICAgIH0KICAgIHAgewogICAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7CiAgICB9CiAgfQogIC5jb2RlIHsKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIHJpZ2h0OiAwOwogICAgdG9wOiAwOwogICAgbGluZS1oZWlnaHQ6IDUwcHg7CiAgICB3aWR0aDogODBweDsKICAgIGNvbG9yOiAjOTk5OwogICAgJjpob3ZlciB7CiAgICAgIGN1cnNvcjogcG9pbnRlcjsKICAgIH0KICB9Cg=="},{"version":3,"sources":["F:\\代码\\Vue 代码\\erabbit-client-pc-124\\src\\views\\login\\components\\callback-bind.vue"],"names":[],"mappings":";AA2IA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACP,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,EAAE;MACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACnB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACd;IACA,EAAE;MACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACpB;EACF;EACA,CAAC,CAAC,CAAC,CAAC,EAAE;IACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACR,CAAC,CAAC,CAAC,EAAE,CAAC;IACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;MACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjB;EACF","file":"F:/代码/Vue 代码/erabbit-client-pc-124/src/views/login/components/callback-bind.vue","sourceRoot":"","sourcesContent":["<template>\n  <Form ref=\"formCom\" :validation-schema=\"mySchema\" v-slot=\"{errors}\" autocomplete=\"off\" class=\"xtx-form\">\n    <div class=\"user-info\">\n      <img :src=\"avatar\" alt=\"\" />\n      <p>Hi，{{nickname}} 欢迎来小兔鲜，完成绑定后可以QQ账号一键登录哦~</p>\n    </div>\n    <div class=\"xtx-form-item\">\n      <div class=\"field\">\n        <i class=\"icon iconfont icon-phone\"></i>\n        <Field :class=\"{err:errors.mobile}\" v-model=\"form.mobile\" name=\"mobile\" class=\"input\" type=\"text\" placeholder=\"绑定的手机号\" />\n      </div>\n      <div v-if=\"errors.mobile\" class=\"error\">{{errors.mobile}}</div>\n    </div>\n    <div class=\"xtx-form-item\">\n      <div class=\"field\">\n        <i class=\"icon iconfont icon-code\"></i>\n        <Field :class=\"{err:errors.code}\" v-model=\"form.code\" name=\"code\" class=\"input\" type=\"text\" placeholder=\"短信验证码\" />\n        <span @click=\"send()\" class=\"code\">\n          {{time===0?'发送验证码':`${time}秒后发送`}}\n        </span>\n      </div>\n      <div v-if=\"errors.code\" class=\"error\">{{errors.code}}</div>\n    </div>\n    <a @click=\"submit()\" href=\"javascript:;\" class=\"submit\">立即绑定</a>\n  </Form>\n</template>\n\n<script>\nimport QC from 'qc'\nimport { reactive, ref, onUnmounted } from 'vue'\nimport { Form, Field } from 'vee-validate'\nimport schema from '@/utils/vee-validate-schema'\nimport { userQQBindCode, userQQBindLogin } from '@/api/user'\nimport { useIntervalFn } from '@vueuse/core'\nimport Message from '@/components/library/Message'\nimport { useStore } from 'vuex'\nimport { useRouter } from 'vue-router'\nexport default {\n  name: 'CallbackBind',\n  components: { Form, Field },\n  props: {\n    unionId: {\n      type: String,\n      default: ''\n    }\n  },\n  setup (props) {\n    // 1. 准备下信息：unionId(openId) qq头像 昵称\n    // 2. 完成表单校验\n    // 3. 发送验证吗（校验，定义api，调用，完成倒计时）\n    // 4. 进行绑定（绑定成功就是登录成功）\n    const nickname = ref('null')\n    const avatar = ref('null')\n    if (QC.Login.check()) {\n      QC.api('get_user_info').success(res => {\n        avatar.value = res.data.figureurl_qq_1\n        nickname.value = res.data.nickname\n      })\n    }\n\n    // 表单数据对象\n    const form = reactive({\n      mobile: null,\n      code: null\n    })\n    // 校验规则对象\n    const mySchema = {\n      mobile: schema.mobile,\n      code: schema.code\n    }\n\n    // 发送短信验证码\n    // pause 暂停 resume 开始\n    // useIntervalFn(回调函数,执行间隔,是否立即开启)\n    const formCom = ref(null)\n    const time = ref(0)\n    const { pause, resume } = useIntervalFn(() => {\n      time.value--\n      if (time.value <= 0) {\n        pause()\n      }\n    }, 1000, false)\n    onUnmounted(() => {\n      pause()\n    })\n\n    // 1. 发送验证码\n    // 1.1 绑定发送验证码按钮点击事件\n    // 1.2 校验手机号，如果成功才去发送短信（定义API），请求成功开启60s的倒计时，不能再次点击，倒计时结束恢复\n    // 1.3 如果失败，失败的校验样式显示出来\n    const send = async () => {\n      const valid = mySchema.mobile(form.mobile)\n      if (valid === true) {\n        // 通过\n        if (time.value === 0) {\n        // 没有倒计时才可以发送\n          await userQQBindCode(form.mobile)\n          Message({ type: 'success', text: '发送成功' })\n          time.value = 60\n          resume()\n        }\n      } else {\n        // 失败，使用vee的错误函数显示错误信息 setFieldError(字段,错误信息)\n        formCom.value.setFieldError('mobile', valid)\n      }\n    }\n\n    // 立即绑定\n    const store = useStore()\n    const router = useRouter()\n    const submit = async () => {\n      const valid = formCom.value.validate()\n      if (valid) {\n        userQQBindLogin({\n          unionId: props.unionId,\n          ...form\n        }).then(data => {\n          // 实现和之前登录一样的逻辑\n          // 1. 存储用户信息\n          const { id, account, avatar, mobile, nickname, token } = data.result\n          store.commit('user/setUser', { id, account, avatar, mobile, nickname, token })\n          store.dispatch('cart/mergeCart').then(() => {\n          // 2. 跳转到来源页或者首页\n            router.push(store.state.user.redirectUrl)\n            // 3. 成功提示\n            Message({ type: 'success', text: 'QQ绑定成功' })\n          })\n        }).catch(e => {\n          Message({ type: 'error', text: '绑定失败' })\n        })\n      }\n    }\n\n    return { nickname, avatar, form, mySchema, send, time, formCom, submit }\n  }\n}\n</script>\n\n<style scoped lang='less'>\n.user-info {\n    width: 320px;\n    height: 70px;\n    margin: 0 auto;\n    display: flex;\n    background: #f2f2f2;\n    align-items: center;\n    padding: 0 10px;\n    margin-bottom: 25px;\n    img {\n      background: #f2f2f2;\n      width: 50px;\n      height: 50px;\n    }\n    p {\n      padding-left: 10px;\n    }\n  }\n  .code {\n    position: absolute;\n    right: 0;\n    top: 0;\n    line-height: 50px;\n    width: 80px;\n    color: #999;\n    &:hover {\n      cursor: pointer;\n    }\n  }\n</style>\n"]}]}