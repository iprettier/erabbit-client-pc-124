{"remainingRequest":"F:\\代码\\Vue 代码\\erabbit-client-pc-124\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!F:\\代码\\Vue 代码\\erabbit-client-pc-124\\src\\views\\category\\sub.vue?vue&type=style&index=0&id=1588d0ea&scoped=true&lang=less","dependencies":[{"path":"F:\\代码\\Vue 代码\\erabbit-client-pc-124\\src\\views\\category\\sub.vue","mtime":1621243079000},{"path":"F:\\代码\\Vue 代码\\erabbit-client-pc-124\\node_modules\\css-loader\\dist\\cjs.js","mtime":1656924650500},{"path":"F:\\代码\\Vue 代码\\erabbit-client-pc-124\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1656924654019},{"path":"F:\\代码\\Vue 代码\\erabbit-client-pc-124\\node_modules\\postcss-loader\\src\\index.js","mtime":1656924651883},{"path":"F:\\代码\\Vue 代码\\erabbit-client-pc-124\\node_modules\\less-loader\\dist\\cjs.js","mtime":1656924651368},{"path":"F:\\代码\\Vue 代码\\erabbit-client-pc-124\\node_modules\\style-resources-loader\\lib\\index.js","mtime":1656924651644},{"path":"F:\\代码\\Vue 代码\\erabbit-client-pc-124\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1656924649801},{"path":"F:\\代码\\Vue 代码\\erabbit-client-pc-124\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1656924653036}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5nb29kcy1saXN0IHsKICBiYWNrZ3JvdW5kOiAjZmZmOwogIHBhZGRpbmc6IDAgMjVweDsKICBtYXJnaW4tdG9wOiAyNXB4OwogIHVsIHsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICBmbGV4LXdyYXA6IHdyYXA7CiAgICBwYWRkaW5nOiAwIDVweDsKICAgIGxpIHsKICAgICAgbWFyZ2luLXJpZ2h0OiAyMHB4OwogICAgICBtYXJnaW4tYm90dG9tOiAyMHB4OwogICAgICAmOm50aC1jaGlsZCg1bikgewogICAgICAgIG1hcmdpbi1yaWdodDogMDsKICAgICAgfQogICAgfQogIH0KfQo="},{"version":3,"sources":["F:\\代码\\Vue 代码\\erabbit-client-pc-124\\src\\views\\category\\sub.vue"],"names":[],"mappings":";AAgGA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,EAAE;IACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IACd,CAAC,EAAE;MACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;MACjB;IACF;EACF;AACF","file":"F:/代码/Vue 代码/erabbit-client-pc-124/src/views/category/sub.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"sub-categroy\">\n    <div class=\"container\">\n      <!-- 面包屑 -->\n      <SubBread />\n      <!-- 筛选区 -->\n      <SubFilter @filter-change=\"filterChange\" />\n      <!-- 商品面板（排序+列表） -->\n      <div class=\"goods-list\">\n        <SubSort @sort-change=\"sortChange\" />\n        <ul>\n          <li v-for=\"goods in goodsList\" :key=\"goods.id\" >\n            <GoodsItem :goods=\"goods\" />\n          </li>\n        </ul>\n        <!-- 无限加载组件 -->\n        <XtxInfiniteLoading :loading=\"loading\" :finished=\"finished\" @infinite=\"getData\" />\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport SubBread from './components/sub-bread'\nimport SubFilter from './components/sub-filter'\nimport SubSort from './components/sub-sort'\nimport GoodsItem from './components/goods-item'\nimport { ref, watch } from 'vue'\nimport { findSubCategoryGoods } from '@/api/category'\nimport { useRoute } from 'vue-router'\nexport default {\n  name: 'SubCategory',\n  components: { SubBread, SubFilter, SubSort, GoodsItem },\n  setup () {\n    const route = useRoute()\n    // 加载中\n    const loading = ref(false)\n    // 是否加载完毕\n    const finished = ref(false)\n    // 商品列表数据\n    const goodsList = ref([])\n    // 请求参数\n    let reqParams = {\n      page: 1,\n      pageSize: 20\n    }\n    const getData = () => {\n      loading.value = true\n      // 设置二级分类的ID\n      reqParams.categoryId = route.params.id\n      findSubCategoryGoods(reqParams).then(({ result }) => {\n        // 获取数据成功\n        if (result.items.length) {\n          // 有数据就追加数据\n          goodsList.value.push(...result.items)\n          // 把page改成下一页页码\n          reqParams.page++\n        } else {\n          // 没有数据，代表加载完成\n          finished.value = true\n        }\n        loading.value = false\n      })\n    }\n    // 在更改了二级分类的时候需要重新加载数据\n    watch(() => route.params.id, (newVal) => {\n      if (newVal && `/category/sub/${newVal}` === route.path) {\n        finished.value = false\n        goodsList.value = [] // 导致列表空的，加载更多组件顶上来，进入可视区，区加载数据\n        reqParams = {\n          page: 1,\n          pageSize: 20\n        }\n      }\n    })\n    // 1. 更改排序组件的筛选数据，重新请求\n    const sortChange = (sortParams) => {\n      finished.value = false\n      // 合并请求参数，保留之前参数\n      reqParams = { ...reqParams, ...sortParams }\n      reqParams.page = 1\n      goodsList.value = []\n    }\n    // 2. 更改筛选组件的筛选数据，重新请求\n    const filterChange = (filterParams) => {\n      finished.value = false\n      // 合并请求参数，保留之前参数\n      reqParams = { ...reqParams, ...filterParams }\n      reqParams.page = 1\n      goodsList.value = []\n    }\n\n    return { loading, finished, getData, goodsList, sortChange, filterChange }\n  }\n}\n</script>\n<style scoped lang=\"less\">\n.goods-list {\n  background: #fff;\n  padding: 0 25px;\n  margin-top: 25px;\n  ul {\n    display: flex;\n    flex-wrap: wrap;\n    padding: 0 5px;\n    li {\n      margin-right: 20px;\n      margin-bottom: 20px;\n      &:nth-child(5n) {\n        margin-right: 0;\n      }\n    }\n  }\n}\n</style>\n"]}]}